package brute;

import org.junit.Test;

import static org.assertj.core.api.Assertions.assertThat;

public class ValidSudokuTest {
    @Test
    public void test1() {
        var board = new char[][] {{'5','3','.','.','7','.','.','.','.'}
                                 ,{'6','.','.','1','9','5','.','.','.'}
                                 ,{'.','9','8','.','.','.','.','6','.'}
                                 ,{'8','.','.','.','6','.','.','.','3'}
                                 ,{'4','.','.','8','.','3','.','.','1'}
                                 ,{'7','.','.','.','2','.','.','.','6'}
                                 ,{'.','6','.','.','.','.','2','8','.'}
                                 ,{'.','.','.','4','1','9','.','.','5'}
                                 ,{'.','.','.','.','8','.','.','7','9'}};
        ValidSudoku validator = new ValidSudoku();
        assertThat(validator.isValidSudoku(board))
                .isTrue();
    }

    @Test
    public void test2() {
        var board = new char[][] {{'8','3','.','.','7','.','.','.','.'}
                                 ,{'6','.','.','1','9','5','.','.','.'}
                                 ,{'.','9','8','.','.','.','.','6','.'}
                                 ,{'8','.','.','.','6','.','.','.','3'}
                                 ,{'4','.','.','8','.','3','.','.','1'}
                                 ,{'7','.','.','.','2','.','.','.','6'}
                                 ,{'.','6','.','.','.','.','2','8','.'}
                                 ,{'.','.','.','4','1','9','.','.','5'}
                                 ,{'.','.','.','.','8','.','.','7','9'}};
        ValidSudoku validator = new ValidSudoku();
        assertThat(validator.isValidSudoku(board))
                .isFalse();
    }

    @Test
    public void test3() {
        var board = new char[][] {{'5','3','.','.','7','.','.','.','.'}
                                 ,{'6','.','.','1','9','5','.','.','.'}
                                 ,{'.','9','8','.','.','.','.','6','.'}
                                 ,{'8','.','.','.','6','.','.','.','3'}
                                 ,{'4','.','.','8','.','3','.','.','1'}
                                 ,{'7','.','.','.','2','.','.','.','6'}
                                 ,{'.','6','.','.','.','.','2','8','.'}
                                 ,{'.','.','.','4','1','9','.','.','2'}
                                 ,{'.','.','.','.','8','.','.','7','9'}};
        ValidSudoku validator = new ValidSudoku();
        assertThat(validator.isValidSudoku(board))
                .isFalse();
    }
}
